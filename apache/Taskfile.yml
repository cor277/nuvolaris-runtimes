# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

version: '3'

dotenv: ["../../nuvolaris-operator/.env"]

vars:
  BASETAG: 0.3.0-dev
  IMG: ghcr.io/nuvolaris/action
  TAG: 
    sh: git describe --tags --abbrev=0 2>/dev/null || git rev-parse --short HEAD

tasks:

  docker-login: 
    cmds:
      - echo $GITHUB_TOKEN | docker login ghcr.io -u $GITHUB_USER --password-stdin

  docker-setup:
    - docker buildx create --use
    - docker run -it --rm --privileged tonistiigi/binfmt --install all

  image-tag:
    - git tag -d $(git tag) 
    - git tag -f {{.BASETAG}}.$(date +%y%m%d%H%M) 
    - env PAGER= git tag

  ferretdb-openshift: >
      docker buildx build --platform linux/amd64,linux/arm64 
      -t ghcr.io/nuvolaris/ferretdb:1.6.0 ferretdb-openshift --push

  nodejs-one:
    dir: openwhisk-runtime-nodejs
    cmds:
    - ./gradlew :core:nodejs{{.N}}Action:prepare
    - > 
      docker buildx build --platform linux/amd64,linux/arm64 
      -t {{.IMG}}-nodejs-v{{.N}}:{{.TAG}} core/nodejs{{.N}}Action/ --push
    - ./gradlew :core:nodejs{{.N}}Action:cleanup
 
  nodejs:
    cmds:
      - task: docker-setup
      - task: docker-login
      - task: nodejs-one
        vars: 
          N: 16
      - task: nodejs-one
        vars: 
          N: 18
    

  java:
    cmds:
      - |
        docker buildx build --platform linux/amd64,linux/arm64 -t {{.IMG}}-java-v8:{{.TAG}} core/java8actionloop --push
    dir: openwhisk-runtime-java

  python:
    dir: openwhisk-runtime-python/core/python310Action
    cmds:
    - cp -Rvf ../python3Action/bin .
    - cp -Rvf ../python3Action/lib .
    - cp ../requirements_common.txt .
    - docker build . -t {{.IMG}}-python-v310:{{.TAG}}
    - task: docker-login
    - docker push {{.IMG}}-python-v310:{{.TAG}}

  python-ai:
    dir: openwhisk-runtime-python/core/python310Action
    cmds:
    - cp -Rvf ../python3Action/bin .
    - cp -Rvf ../python3Action/lib .
    - cp ../requirements_common.txt .
    - cat ../../../python_ai.txt >>../requirements_common.txt
    - docker build . -t {{.IMG}}-python-v310-ai:{{.TAG}}
    - task: docker-login
    - docker push {{.IMG}}-python-v310-ai:{{.TAG}}
